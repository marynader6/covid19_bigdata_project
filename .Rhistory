i <- 0
for (data in analysisData$age)
{
if((data >= 0) & (data <= 9)){
analysisData[i,]$age <- 0
}
else if((data >= 10) & (data <= 19)){
analysisData[i,]$age <- 1
}
else if((data >= 20) & (data <= 29)){
analysisData[i,]$age <- 2
}
else if((data >= 30) & (data <= 39)){
analysisData[i,]$age <- 3
}else if((data >= 40) & (data <= 49)){
analysisData[i,]$age <- 4
}else if((data >= 50) & (data <= 59)){
analysisData[i,]$age <- 5
}
else if((data >= 60) & (data <= 69)){
analysisData[i,]$age <- 6
}else if((data >= 70) & (data <= 79)){
analysisData[i,]$age <- 7
}else if((data >= 80) & (data <= 89)){
analysisData[i,]$age <- 8
}else if((data >= 90) & (data <= 99)){
analysisData[i,]$age <- 9
}
else if((data >= 100) ){
analysisData[i,]$age <- 10
}
i <- i+1
}
i <- 0
for (data in analysisData$age)
{
print(data)
if((data >= 0) & (data <= 9)){
analysisData[i,]$age <- 0
}
else if((data >= 10) & (data <= 19)){
analysisData[i,]$age <- 1
}
else if((data >= 20) & (data <= 29)){
analysisData[i,]$age <- 2
}
else if((data >= 30) & (data <= 39)){
analysisData[i,]$age <- 3
}else if((data >= 40) & (data <= 49)){
analysisData[i,]$age <- 4
}else if((data >= 50) & (data <= 59)){
analysisData[i,]$age <- 5
}
else if((data >= 60) & (data <= 69)){
analysisData[i,]$age <- 6
}else if((data >= 70) & (data <= 79)){
analysisData[i,]$age <- 7
}else if((data >= 80) & (data <= 89)){
analysisData[i,]$age <- 8
}else if((data >= 90) & (data <= 99)){
analysisData[i,]$age <- 9
}
else if((data >= 100) ){
analysisData[i,]$age <- 10
}
i <- i+1
}
analysisData <- read.csv("finalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$age[analysisData$age == "N/A" | analysisData$age == ""] <- NA
analysisData$age <- as.numeric(analysisData$age)
myAge <- analysisData$age[ !(is.na(analysisData$age))]
ageMean <- as.integer(mean(myAge))
analysisData$age[ (is.na(analysisData$age))] <- ageMean
i <- 0
for (data in analysisData$age)
{
print(data)
if((data >= 0) & (data <= 9)){
analysisData[i,]$age <- 0
}
else if((data >= 10) & (data <= 19)){
analysisData[i,]$age <- 1
}
else if((data >= 20) & (data <= 29)){
analysisData[i,]$age <- 2
}
else if((data >= 30) & (data <= 39)){
analysisData[i,]$age <- 3
}else if((data >= 40) & (data <= 49)){
analysisData[i,]$age <- 4
}else if((data >= 50) & (data <= 59)){
analysisData[i,]$age <- 5
}
else if((data >= 60) & (data <= 69)){
analysisData[i,]$age <- 6
}else if((data >= 70) & (data <= 79)){
analysisData[i,]$age <- 7
}else if((data >= 80) & (data <= 89)){
analysisData[i,]$age <- 8
}else if((data >= 90) & (data <= 99)){
analysisData[i,]$age <- 9
}
else if((data >= 100) ){
analysisData[i,]$age <- 10
}
i <- i+1
}
View(analysisData)
i <- 0
for (data in analysisData$age)
{
print(data)
if((data >= 0) & (data <= 9)){
analysisData[i,]$age <- 0
}
else if((data >= 10) & (data <= 19)){
analysisData[i,]$age <- 1
}
else if((data >= 20) & (data <= 29)){
analysisData[i,]$age <- 2
}
else if((data >= 30) & (data <= 39)){
analysisData[i,]$age <- 3
}else if((data > 40) & (data < 49)){
analysisData[i,]$age <- 4
}else if((data >= 50) & (data <= 59)){
analysisData[i,]$age <- 5
}
else if((data >= 60) & (data <= 69)){
analysisData[i,]$age <- 6
}else if((data >= 70) & (data <= 79)){
analysisData[i,]$age <- 7
}else if((data >= 80) & (data <= 89)){
analysisData[i,]$age <- 8
}else if((data >= 90) & (data <= 99)){
analysisData[i,]$age <- 9
}
else if((data >= 100) ){
analysisData[i,]$age <- 10
}
i <- i+1
}
analysisData <- read.csv("finalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$age[analysisData$age == "N/A" | analysisData$age == ""] <- NA
analysisData$age <- as.numeric(analysisData$age)
myAge <- analysisData$age[ !(is.na(analysisData$age))]
ageMean <- as.integer(mean(myAge))
analysisData$age[ (is.na(analysisData$age))] <- ageMean
analysisData$age <- cut(analysisData$age, c(0, 10,20,30,40,50,60,70,80,90,100),
labels=c('0', '1', '2', '3', '4','5','6','7','8','9','10'))
analysisData$age <- cut(analysisData$age, c(0, 10,20,30,40,50,60,70,80,90,100),
labels=c('0', '1', '2', '3', '4','5','6','7','8','9'))
analysisData <- read.csv("finalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$age[analysisData$age == "N/A" | analysisData$age == ""] <- NA
analysisData$age <- as.numeric(analysisData$age)
myAge <- analysisData$age[ !(is.na(analysisData$age))]
ageMean <- as.integer(mean(myAge))
analysisData$age[ (is.na(analysisData$age))] <- ageMean
analysisData$age <- cut(analysisData$age, c(0, 10,20,30,40,50,60,70,80,90,100,Inf),
labels=c('0', '1', '2', '3', '4','5','6','7','8','9','10'))
analysisData$age
View(analysisData)
table(analysisData$age)
plot(analysisData$age)
plot(analysisData$age,xlab="age")
plot(analysisData$age=as.factor(2:8),xlim = c(1,10)
plot(analysisData$age=as.factor(2:8),xlim = c(1,10))
plot(analysisData$age,x=as.factor(2:8),xlim = c(1,10))
plot(x=as.factor(2:8),y=2:8,xlim = c(1,10))
plot(analysisData$age,xlab="age",ylab = "number")
analysisData <- read.csv("finalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$age[analysisData$age == "N/A" | analysisData$age == ""] <- NA
analysisData$age <- as.numeric(analysisData$age)
myAge <- analysisData$age[ !(is.na(analysisData$age))]
ageMean <- as.integer(mean(myAge))
analysisData$age[ (is.na(analysisData$age))] <- ageMean
analysisData$age <- cut(analysisData$age, c(0, 10,20,30,40,50,60,70,80,90,100,Inf),
labels=c('0-9', '10-19', '20-29', '30-39', '40-49',
'50-59','60-69','70-79','80-89','90-99','>=100'))
plot(analysisData$age,xlab="age",ylab = "number")
pie(analysisData$age , col = c("red","green","blue","purple","pink","violet","orange","yellow","grey","brown"))
ages<-table(analysisData$age)
pie(ages , col = c("red","green","blue","purple","pink","violet","orange","yellow","grey","brown"))
pie(ages , col = c("red","green","blue","purple","pink","violet","orange","yellow","grey","brown","offwhite"))
pie(ages , col = c("red","green","blue","purple","pink","violet","orange","yellow","grey","brown","white"))
dAges <- table(analysisData[analysisData$death == 1 , c("age")])
dAges
plot(dAges)
pie(dAges , col = c("red","green","blue","purple","pink","violet",
"orange","yellow","grey","brown","white"))
plot(dAges)
pie(dAges , col = c("red","green","blue","purple","pink","violet",
"orange","yellow","grey","brown","white"))
color <- c("red","green","blue","purple","pink","violet",
"orange","yellow","grey","brown","white")
ages<-table(analysisData$age)
plot(analysisData$age,xlab="age",ylab = "number")
pie(ages , col = color)
dAges <- table(analysisData[analysisData$death == 1 , c("age")])
plot(dAges)
pie(dAges , col = color)
rAges <- table(analysisData[analysisData$recovered == 1 , c("age")])
plot(rAges)
pie(rAges , col = color)
setwd("E:\\4th Year\\Big data\\project")
rAges
ages
plot(ages,xlab="age",ylab = "number")
barplot(ages,xlab="age",ylab = "number")
barplot(dAges)
barplot(rAges)
pie(rAges , col = color)
analysisData$recovered
levels(analysisData$recovered)
levels(analysisData$death)
analysisData$death[!(analysisData$death == 0)] <- 1
analysisData$death[!(analysisData$death == 0)] <- 1
levels(analysisData$death)
analysisData$death[(analysisData$death != "0")] <- 1
levels(analysisData$death)
table(analysisData$death)
analysisData$death[(analysisData$recovered != "0")] <- 1
table(analysisData$recovered)
analysisData$death[(analysisData$death != "0")] <- 1
analysisData$recovered[(analysisData$recovered != "0")] <- 1
table(analysisData$death)
analysisData <- read.csv("finalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$age[analysisData$age == "N/A" | analysisData$age == ""] <- NA
analysisData$age <- as.numeric(analysisData$age)
myAge <- analysisData$age[ !(is.na(analysisData$age))]
ageMean <- as.integer(mean(myAge))
analysisData$age[ (is.na(analysisData$age))] <- ageMean
analysisData$age <- cut(analysisData$age, c(0, 10,20,30,40,50,60,70,80,90,100,Inf),
labels=c('0-9', '10-19', '20-29', '30-39', '40-49',
'50-59','60-69','70-79','80-89','90-99','>=100'))
ages<-table(analysisData$age)
analysisData$death[(analysisData$death != "0")] <- 1
analysisData$recovered[(analysisData$recovered != "0")] <- 1
table(analysisData$recovered)
table(analysisData$death)
dAges <- table(analysisData[analysisData$death == 1 , c("age")])
barplot(dAges)
pie(dAges , col = color)
rAges <- table(analysisData[analysisData$recovered == 1 , c("age")])
barplot(rAges)
pie(rAges , col = color)
iAges <- table(analysisData[analysisData$recovered == 0 & analysisData$death == 0 , c("age")])
barplot(iAges)
pie(iAges , col = color)
iAges
setwd("E:\\4th Year\\Big data\\Lab 5 _ 6 - Regression\\Lab 6 - Logistic Regression")
# [Data Description]:
# the marketing campaign team wants to send
# special offers to those respondents with the highest probability of purchase.
# the response variable is purchase or no purchase
# given customer income and age and product price
Mydata <- read.csv("survey.csv",header=TRUE,sep=",")
# [1] Explore data
table(Mydata$MYDEPV) # the outcome variable
# purchase or no purchase
with(Mydata, table(Price,MYDEPV))
summary(Mydata$Age)
cor.mat <- cor(Mydata[,-1]) # the input variables
cor.mat # Note: The general rule is not to include variables in your model that are
# [2] Test a model with 3 variables Price, Income and Age
mylogit <- glm(MYDEPV ~ Income + Age + as.factor(Price),
data =Mydata, family=binomial(link="logit"),
na.action=na.pass) # as.factor(Price) : to deal with price as categorical feature
summary(mylogit)
# [3] ROC Curve
if(!require("ROCR"))
{
install.packages("ROCR")
library(ROCR)
}
#### NOTE: For this part, you need to search and read about the ROC curve.
pred = predict(mylogit, type="response") # this returns the probability scores on the training data
pred
predObj = prediction(pred, Mydata$MYDEPV) # prediction object needed by ROCR
rocObj = performance(predObj, measure="tpr", x.measure="fpr")  # creates ROC curve obj
aucObj = performance(predObj, measure="auc")  # auc object
auc = aucObj@y.values[[1]]
auc   # the auc score: tells you how well the model predicts.
# plot the roc curve
plot(rocObj, main = paste("Area under the curve:", auc))
# [4] Predictions
#Prediction - 1
Price <- c(10,20,30)
Age <- c(mean(Mydata$Age))
Income <- c(mean(Mydata$Income))
newdata1 <- data.frame(Income,Age,Price) # Note: The predict function requires the variables to be named exactly as in the fitted model.
newdata1
newdata1$PurchaseP <- predict (mylogit,newdata=newdata1,type="response")
newdata1
mode(analysisData$gender)
setwd("E:\\4th Year\\Big data\\project")
openDF <- read.csv("COVID19_open_line_list.csv",header = TRUE)
openDrops <- c("ï..ID","X","X.1","X.2","X.3","X.4",
"X.5","X.6","X.7","X.8","X.9","X.10","X.11",
"latitude","longitude","city","province","country","geo_resolution",
"symptoms","reported_market_exposure","chronic_disease_binary",
"chronic_disease","source","sequence_available","outcome",
"notes_for_discussion","location","admin1","admin2","admin3",
"country_new","admin_id","data_moderator_initials",
"date_death_or_discharge","wuhan.0._not_wuhan.1.",
"travel_history_dates","travel_history_location","additional_information")
openDF <- openDF[,!(names(openDF) %in% openDrops)]
names(openDF)[2] <- "gender"
names(openDF)[6] <- "wuhan"
openDF$wuhan[openDF$wuhan == "no"] <- 0
openDF$wuhan[openDF$wuhan == ""] <- -1
openDF$wuhan[openDF$wuhan != 0 | openDF$wuhan != NA] <- 1
openDF$recovered <- 0
openDF$death <- 0
lineDF <- read.csv("COVID19_line_list_data.csv",header = TRUE)
lineDrops <- c("ï..id","X","X.1","X.2","X.3","X.4",
"X.5","X.6","source","link","symptom",
"case_in_country","summary","exposure_end",
"exposure_start","If_onset_approximated",
"location","country")
lineDF <- lineDF[,!(names(lineDF) %in% lineDrops)]
names(lineDF)[1] <- "date_confirmation"
names(lineDF)[4] <- "date_onset_symptoms"
names(lineDF)[5] <- "date_admission_hospital"
lineDF$wuhan <- lineDF$visiting.Wuhan | lineDF$from.Wuhan
lineDF$wuhan[lineDF$wuhan == TRUE] <- 1
lineDF <- lineDF[-6]
lineDF <- lineDF[-6]
finalSet <- rbind(openDF,lineDF)
finalSet$gender <- as.character(finalSet$gender)
finalSet$gender[finalSet$gender == "female" | finalSet$gender == "Female"] <- "F"
finalSet$gender[finalSet$gender == "male" | finalSet$gender == "Male"] <- "M"
write.csv(finalSet,file = "finalData.csv",row.names = FALSE)
write.csv(finalSet,file = "finalData.csv",row.names = FALSE)
rm(list = ls())
analysisData <- read.csv("finalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$age[analysisData$age == "N/A" | analysisData$age == ""] <- NA
analysisData$age <- as.numeric(analysisData$age)
myAge <- analysisData$age[ !(is.na(analysisData$age))]
ageMean <- as.integer(mean(myAge))
analysisData$age[ (is.na(analysisData$age))] <- ageMean
analysisData$age <- cut(analysisData$age, c(0, 10,20,30,40,50,60,70,80,90,100,Inf),
labels=c('0-9', '10-19', '20-29', '30-39', '40-49',
'50-59','60-69','70-79','80-89','90-99','>=100'))
color <- c("red","green","blue","purple","pink","violet",
"orange","yellow","grey","brown","white")
ages<-table(analysisData$age)
barplot(ages,xlab="age",ylab = "number")
pie(ages , col = color)
analysisData$death[(analysisData$death != "0")] <- 1
analysisData$recovered[(analysisData$recovered != "0")] <- 1
dAges <- table(analysisData[analysisData$death == 1 , c("age")])
barplot(dAges)
pie(dAges , col = color)
rAges <- table(analysisData[analysisData$recovered == 1 , c("age")])
barplot(rAges)
pie(rAges , col = color)
iAges <- table(analysisData[analysisData$recovered == 0 & analysisData$death == 0 , c("age")])
barplot(iAges)
pie(iAges , col = color)
mode(analysisData$gender)
table(analysisData$gender)
finalSet$gender[finalSet$gender == 4000] <- NA
openDF <- read.csv("COVID19_open_line_list.csv",header = TRUE)
openDrops <- c("ï..ID","X","X.1","X.2","X.3","X.4",
"X.5","X.6","X.7","X.8","X.9","X.10","X.11",
"latitude","longitude","city","province","country","geo_resolution",
"symptoms","reported_market_exposure","chronic_disease_binary",
"chronic_disease","source","sequence_available","outcome",
"notes_for_discussion","location","admin1","admin2","admin3",
"country_new","admin_id","data_moderator_initials",
"date_death_or_discharge","wuhan.0._not_wuhan.1.",
"travel_history_dates","travel_history_location","additional_information")
openDF <- openDF[,!(names(openDF) %in% openDrops)]
names(openDF)[2] <- "gender"
names(openDF)[6] <- "wuhan"
openDF$wuhan[openDF$wuhan == "no"] <- 0
openDF$wuhan[openDF$wuhan == ""] <- -1
openDF$wuhan[openDF$wuhan != 0 | openDF$wuhan != NA] <- 1
openDF$recovered <- 0
openDF$death <- 0
lineDF <- read.csv("COVID19_line_list_data.csv",header = TRUE)
lineDrops <- c("ï..id","X","X.1","X.2","X.3","X.4",
"X.5","X.6","source","link","symptom",
"case_in_country","summary","exposure_end",
"exposure_start","If_onset_approximated",
"location","country")
lineDF <- lineDF[,!(names(lineDF) %in% lineDrops)]
names(lineDF)[1] <- "date_confirmation"
names(lineDF)[4] <- "date_onset_symptoms"
names(lineDF)[5] <- "date_admission_hospital"
lineDF$wuhan <- lineDF$visiting.Wuhan | lineDF$from.Wuhan
lineDF$wuhan[lineDF$wuhan == TRUE] <- 1
lineDF <- lineDF[-6]
lineDF <- lineDF[-6]
finalSet <- rbind(openDF,lineDF)
finalSet$gender <- as.character(finalSet$gender)
finalSet$gender[finalSet$gender == "female" | finalSet$gender == "Female"] <- "F"
finalSet$gender[finalSet$gender == "male" | finalSet$gender == "Male"] <- "M"
finalSet$gender[finalSet$gender == 4000] <- NA
write.csv(finalSet,file = "finalData.csv",row.names = FALSE)
analysisData <- read.csv("finalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$age[analysisData$age == "N/A" | analysisData$age == ""] <- NA
analysisData$age <- as.numeric(analysisData$age)
myAge <- analysisData$age[ !(is.na(analysisData$age))]
ageMean <- as.integer(mean(myAge))
analysisData$age[ (is.na(analysisData$age))] <- ageMean
analysisData$age <- cut(analysisData$age, c(0, 10,20,30,40,50,60,70,80,90,100,Inf),
labels=c('0-9', '10-19', '20-29', '30-39', '40-49',
'50-59','60-69','70-79','80-89','90-99','>=100'))
color <- c("red","green","blue","purple","pink","violet",
"orange","yellow","grey","brown","white")
ages<-table(analysisData$age)
barplot(ages,xlab="age",ylab = "number")
pie(ages , col = color)
analysisData$death[(analysisData$death != "0")] <- 1
analysisData$recovered[(analysisData$recovered != "0")] <- 1
dAges <- table(analysisData[analysisData$death == 1 , c("age")])
barplot(dAges)
pie(dAges , col = color)
rAges <- table(analysisData[analysisData$recovered == 1 , c("age")])
barplot(rAges)
pie(rAges , col = color)
iAges <- table(analysisData[analysisData$recovered == 0 & analysisData$death == 0 , c("age")])
barplot(iAges)
pie(iAges , col = color)
mode(analysisData$gender)
table(analysisData$gender)
analysisData$gender[analysisData$gender == "N/A" | analysisData$gender == ""] <- NA
table(analysisData$gender)
myG <- analysisData$gender[ !(is.na(analysisData$gender))]
mode(myG)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
print(getmode(myG))
analysisData$gender[ (is.na(analysisData$gender))] <- "M"
table
table(analysisData$gender)
fAges <- table(analysisData[analysisData$gender == "F" , c("age")])
barplot(fAges)
pie(fAges , col = color)
mAges <- table(analysisData[analysisData$gender == "M" , c("age")])
barplot(mAges)
pie(mAges , col = color)
barplot(analysisData$gender)
barplot(analysisData$age,xlab="age",ylab = "number")
gender<- table(analysisData$gender)
barplot(gender)
analysisData$gender <- as.character(analysisData$gender)
analysisData <- read.csv("finalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$age[analysisData$age == "N/A" | analysisData$age == ""] <- NA
analysisData$age <- as.numeric(analysisData$age)
myAge <- analysisData$age[ !(is.na(analysisData$age))]
ageMean <- as.integer(mean(myAge))
analysisData$age[ (is.na(analysisData$age))] <- ageMean
analysisData$age <- cut(analysisData$age, c(0, 10,20,30,40,50,60,70,80,90,100,Inf),
labels=c('0-9', '10-19', '20-29', '30-39', '40-49',
'50-59','60-69','70-79','80-89','90-99','>=100'))
color <- c("red","green","blue","purple","pink","violet",
"orange","yellow","grey","brown","white")
ages<-table(analysisData$age)
barplot(ages,xlab="age",ylab = "number")
pie(ages , col = color)
analysisData$death[(analysisData$death != "0")] <- 1
analysisData$recovered[(analysisData$recovered != "0")] <- 1
dAges <- table(analysisData[analysisData$death == 1 , c("age")])
barplot(dAges)
pie(dAges , col = color)
rAges <- table(analysisData[analysisData$recovered == 1 , c("age")])
barplot(rAges)
pie(rAges , col = color)
iAges <- table(analysisData[analysisData$recovered == 0 & analysisData$death == 0 , c("age")])
barplot(iAges)
pie(iAges , col = color)
analysisData$gender <- as.character(analysisData$gender)
analysisData$gender[analysisData$gender == "N/A" | analysisData$gender == ""] <- NA
myG <- analysisData$gender[ !(is.na(analysisData$gender))]
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
mode <- (getmode(myG))
analysisData$gender[ (is.na(analysisData$gender))] <- "M"
fAges <- table(analysisData[analysisData$gender == "F" , c("age")])
barplot(fAges)
pie(fAges , col = color)
mAges <- table(analysisData[analysisData$gender == "M" , c("age")])
barplot(mAges)
pie(mAges , col = color)
gender<- table(analysisData$gender)
barplot(gender)
pie(gender,col = c("pink","blue"))
recGender <- table(analysisData[analysisData$recovered == 1 , c("gender")])
pie(recGender,col = c("pink","blue"))
recGender <- table(analysisData[analysisData$recovered == 1 , c("gender")])
pie(recGender,col = c("pink","blue"))
pie(gender,col = c("pink","blue"))
barplot(recGender)
barplot(recGender,col = c("pink","blue"))
dGender <- table(analysisData[analysisData$death == 1 , c("gender")])
barplot(dGender,col = c("pink","blue"))
pie(dGender,col = c("pink","blue"))
