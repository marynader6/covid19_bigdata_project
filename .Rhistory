predObj = prediction(pred, Mydata$MYDEPV) # prediction object needed by ROCR
rocObj = performance(predObj, measure="tpr", x.measure="fpr")  # creates ROC curve obj
aucObj = performance(predObj, measure="auc")  # auc object
auc = aucObj@y.values[[1]]
auc   # the auc score: tells you how well the model predicts.
# plot the roc curve
plot(rocObj, main = paste("Area under the curve:", auc))
# [4] Predictions
#Prediction - 1
Price <- c(10,20,30)
Age <- c(mean(Mydata$Age))
Income <- c(mean(Mydata$Income))
newdata1 <- data.frame(Income,Age,Price) # Note: The predict function requires the variables to be named exactly as in the fitted model.
newdata1
newdata1$PurchaseP <- predict (mylogit,newdata=newdata1,type="response")
newdata1
mode(analysisData$gender)
setwd("E:\\4th Year\\Big data\\project")
openDF <- read.csv("COVID19_open_line_list.csv",header = TRUE)
openDrops <- c("誰..ID","X","X.1","X.2","X.3","X.4",
"X.5","X.6","X.7","X.8","X.9","X.10","X.11",
"latitude","longitude","city","province","country","geo_resolution",
"symptoms","reported_market_exposure","chronic_disease_binary",
"chronic_disease","source","sequence_available","outcome",
"notes_for_discussion","location","admin1","admin2","admin3",
"country_new","admin_id","data_moderator_initials",
"date_death_or_discharge","wuhan.0._not_wuhan.1.",
"travel_history_dates","travel_history_location","additional_information")
openDF <- openDF[,!(names(openDF) %in% openDrops)]
names(openDF)[2] <- "gender"
names(openDF)[6] <- "wuhan"
openDF$wuhan[openDF$wuhan == "no"] <- 0
openDF$wuhan[openDF$wuhan == ""] <- -1
openDF$wuhan[openDF$wuhan != 0 | openDF$wuhan != NA] <- 1
openDF$recovered <- 0
openDF$death <- 0
lineDF <- read.csv("COVID19_line_list_data.csv",header = TRUE)
lineDrops <- c("誰..id","X","X.1","X.2","X.3","X.4",
"X.5","X.6","source","link","symptom",
"case_in_country","summary","exposure_end",
"exposure_start","If_onset_approximated",
"location","country")
lineDF <- lineDF[,!(names(lineDF) %in% lineDrops)]
names(lineDF)[1] <- "date_confirmation"
names(lineDF)[4] <- "date_onset_symptoms"
names(lineDF)[5] <- "date_admission_hospital"
lineDF$wuhan <- lineDF$visiting.Wuhan | lineDF$from.Wuhan
lineDF$wuhan[lineDF$wuhan == TRUE] <- 1
lineDF <- lineDF[-6]
lineDF <- lineDF[-6]
finalSet <- rbind(openDF,lineDF)
finalSet$gender <- as.character(finalSet$gender)
finalSet$gender[finalSet$gender == "female" | finalSet$gender == "Female"] <- "F"
finalSet$gender[finalSet$gender == "male" | finalSet$gender == "Male"] <- "M"
write.csv(finalSet,file = "finalData.csv",row.names = FALSE)
write.csv(finalSet,file = "finalData.csv",row.names = FALSE)
rm(list = ls())
analysisData <- read.csv("finalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$age[analysisData$age == "N/A" | analysisData$age == ""] <- NA
analysisData$age <- as.numeric(analysisData$age)
myAge <- analysisData$age[ !(is.na(analysisData$age))]
ageMean <- as.integer(mean(myAge))
analysisData$age[ (is.na(analysisData$age))] <- ageMean
analysisData$age <- cut(analysisData$age, c(0, 10,20,30,40,50,60,70,80,90,100,Inf),
labels=c('0-9', '10-19', '20-29', '30-39', '40-49',
'50-59','60-69','70-79','80-89','90-99','>=100'))
color <- c("red","green","blue","purple","pink","violet",
"orange","yellow","grey","brown","white")
ages<-table(analysisData$age)
barplot(ages,xlab="age",ylab = "number")
pie(ages , col = color)
analysisData$death[(analysisData$death != "0")] <- 1
analysisData$recovered[(analysisData$recovered != "0")] <- 1
dAges <- table(analysisData[analysisData$death == 1 , c("age")])
barplot(dAges)
pie(dAges , col = color)
rAges <- table(analysisData[analysisData$recovered == 1 , c("age")])
barplot(rAges)
pie(rAges , col = color)
iAges <- table(analysisData[analysisData$recovered == 0 & analysisData$death == 0 , c("age")])
barplot(iAges)
pie(iAges , col = color)
mode(analysisData$gender)
table(analysisData$gender)
finalSet$gender[finalSet$gender == 4000] <- NA
openDF <- read.csv("COVID19_open_line_list.csv",header = TRUE)
openDrops <- c("誰..ID","X","X.1","X.2","X.3","X.4",
"X.5","X.6","X.7","X.8","X.9","X.10","X.11",
"latitude","longitude","city","province","country","geo_resolution",
"symptoms","reported_market_exposure","chronic_disease_binary",
"chronic_disease","source","sequence_available","outcome",
"notes_for_discussion","location","admin1","admin2","admin3",
"country_new","admin_id","data_moderator_initials",
"date_death_or_discharge","wuhan.0._not_wuhan.1.",
"travel_history_dates","travel_history_location","additional_information")
openDF <- openDF[,!(names(openDF) %in% openDrops)]
names(openDF)[2] <- "gender"
names(openDF)[6] <- "wuhan"
openDF$wuhan[openDF$wuhan == "no"] <- 0
openDF$wuhan[openDF$wuhan == ""] <- -1
openDF$wuhan[openDF$wuhan != 0 | openDF$wuhan != NA] <- 1
openDF$recovered <- 0
openDF$death <- 0
lineDF <- read.csv("COVID19_line_list_data.csv",header = TRUE)
lineDrops <- c("誰..id","X","X.1","X.2","X.3","X.4",
"X.5","X.6","source","link","symptom",
"case_in_country","summary","exposure_end",
"exposure_start","If_onset_approximated",
"location","country")
lineDF <- lineDF[,!(names(lineDF) %in% lineDrops)]
names(lineDF)[1] <- "date_confirmation"
names(lineDF)[4] <- "date_onset_symptoms"
names(lineDF)[5] <- "date_admission_hospital"
lineDF$wuhan <- lineDF$visiting.Wuhan | lineDF$from.Wuhan
lineDF$wuhan[lineDF$wuhan == TRUE] <- 1
lineDF <- lineDF[-6]
lineDF <- lineDF[-6]
finalSet <- rbind(openDF,lineDF)
finalSet$gender <- as.character(finalSet$gender)
finalSet$gender[finalSet$gender == "female" | finalSet$gender == "Female"] <- "F"
finalSet$gender[finalSet$gender == "male" | finalSet$gender == "Male"] <- "M"
finalSet$gender[finalSet$gender == 4000] <- NA
write.csv(finalSet,file = "finalData.csv",row.names = FALSE)
analysisData <- read.csv("finalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$age[analysisData$age == "N/A" | analysisData$age == ""] <- NA
analysisData$age <- as.numeric(analysisData$age)
myAge <- analysisData$age[ !(is.na(analysisData$age))]
ageMean <- as.integer(mean(myAge))
analysisData$age[ (is.na(analysisData$age))] <- ageMean
analysisData$age <- cut(analysisData$age, c(0, 10,20,30,40,50,60,70,80,90,100,Inf),
labels=c('0-9', '10-19', '20-29', '30-39', '40-49',
'50-59','60-69','70-79','80-89','90-99','>=100'))
color <- c("red","green","blue","purple","pink","violet",
"orange","yellow","grey","brown","white")
ages<-table(analysisData$age)
barplot(ages,xlab="age",ylab = "number")
pie(ages , col = color)
analysisData$death[(analysisData$death != "0")] <- 1
analysisData$recovered[(analysisData$recovered != "0")] <- 1
dAges <- table(analysisData[analysisData$death == 1 , c("age")])
barplot(dAges)
pie(dAges , col = color)
rAges <- table(analysisData[analysisData$recovered == 1 , c("age")])
barplot(rAges)
pie(rAges , col = color)
iAges <- table(analysisData[analysisData$recovered == 0 & analysisData$death == 0 , c("age")])
barplot(iAges)
pie(iAges , col = color)
mode(analysisData$gender)
table(analysisData$gender)
analysisData$gender[analysisData$gender == "N/A" | analysisData$gender == ""] <- NA
table(analysisData$gender)
myG <- analysisData$gender[ !(is.na(analysisData$gender))]
mode(myG)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
print(getmode(myG))
analysisData$gender[ (is.na(analysisData$gender))] <- "M"
table
table(analysisData$gender)
fAges <- table(analysisData[analysisData$gender == "F" , c("age")])
barplot(fAges)
pie(fAges , col = color)
mAges <- table(analysisData[analysisData$gender == "M" , c("age")])
barplot(mAges)
pie(mAges , col = color)
barplot(analysisData$gender)
barplot(analysisData$age,xlab="age",ylab = "number")
gender<- table(analysisData$gender)
barplot(gender)
analysisData$gender <- as.character(analysisData$gender)
analysisData <- read.csv("finalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$age[analysisData$age == "N/A" | analysisData$age == ""] <- NA
analysisData$age <- as.numeric(analysisData$age)
myAge <- analysisData$age[ !(is.na(analysisData$age))]
ageMean <- as.integer(mean(myAge))
analysisData$age[ (is.na(analysisData$age))] <- ageMean
analysisData$age <- cut(analysisData$age, c(0, 10,20,30,40,50,60,70,80,90,100,Inf),
labels=c('0-9', '10-19', '20-29', '30-39', '40-49',
'50-59','60-69','70-79','80-89','90-99','>=100'))
color <- c("red","green","blue","purple","pink","violet",
"orange","yellow","grey","brown","white")
ages<-table(analysisData$age)
barplot(ages,xlab="age",ylab = "number")
pie(ages , col = color)
analysisData$death[(analysisData$death != "0")] <- 1
analysisData$recovered[(analysisData$recovered != "0")] <- 1
dAges <- table(analysisData[analysisData$death == 1 , c("age")])
barplot(dAges)
pie(dAges , col = color)
rAges <- table(analysisData[analysisData$recovered == 1 , c("age")])
barplot(rAges)
pie(rAges , col = color)
iAges <- table(analysisData[analysisData$recovered == 0 & analysisData$death == 0 , c("age")])
barplot(iAges)
pie(iAges , col = color)
analysisData$gender <- as.character(analysisData$gender)
analysisData$gender[analysisData$gender == "N/A" | analysisData$gender == ""] <- NA
myG <- analysisData$gender[ !(is.na(analysisData$gender))]
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
mode <- (getmode(myG))
analysisData$gender[ (is.na(analysisData$gender))] <- "M"
fAges <- table(analysisData[analysisData$gender == "F" , c("age")])
barplot(fAges)
pie(fAges , col = color)
mAges <- table(analysisData[analysisData$gender == "M" , c("age")])
barplot(mAges)
pie(mAges , col = color)
gender<- table(analysisData$gender)
barplot(gender)
pie(gender,col = c("pink","blue"))
recGender <- table(analysisData[analysisData$recovered == 1 , c("gender")])
pie(recGender,col = c("pink","blue"))
recGender <- table(analysisData[analysisData$recovered == 1 , c("gender")])
pie(recGender,col = c("pink","blue"))
pie(gender,col = c("pink","blue"))
barplot(recGender)
barplot(recGender,col = c("pink","blue"))
dGender <- table(analysisData[analysisData$death == 1 , c("gender")])
barplot(dGender,col = c("pink","blue"))
pie(dGender,col = c("pink","blue"))
setwd("E:\\4th Year\\Big data\\project\\covid19_bigdata_project")
rm(list = ls())
analysisData <- read.csv("finalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$age[analysisData$age == "N/A" | analysisData$age == ""] <- NA
analysisData$age <- as.numeric(analysisData$age)
myAge <- analysisData$age[ !(is.na(analysisData$age))]
ageMean <- as.integer(mean(myAge))
analysisData$age[ (is.na(analysisData$age))] <- ageMean
analysisData$age <- cut(analysisData$age, c(0, 10,20,30,40,50,60,70,80,90,100,Inf),
labels=c('0-9', '10-19', '20-29', '30-39', '40-49',
'50-59','60-69','70-79','80-89','90-99','>=100'))
color <- c("red","green","blue","purple","pink","violet",
"orange","yellow","grey","brown","white")
ages<-table(analysisData$age)
barplot(ages,xlab="age",ylab = "number")
pie(ages , col = color)
analysisData$death[(analysisData$death != "0")] <- 1
analysisData$recovered[(analysisData$recovered != "0")] <- 1
dAges <- table(analysisData[analysisData$death == 1 , c("age")])
barplot(dAges)
pie(dAges , col = color)
rAges <- table(analysisData[analysisData$recovered == 1 , c("age")])
barplot(rAges)
pie(rAges , col = color)
iAges <- table(analysisData[analysisData$recovered == 0 & analysisData$death == 0 , c("age")])
barplot(iAges)
pie(iAges , col = color)
analysisData$gender <- as.character(analysisData$gender)
analysisData$gender[analysisData$gender == "N/A" | analysisData$gender == ""] <- NA
myG <- analysisData$gender[ !(is.na(analysisData$gender))]
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
mode <- (getmode(myG))
analysisData$gender[ (is.na(analysisData$gender))] <- "M"
fAges <- table(analysisData[analysisData$gender == "F" , c("age")])
barplot(fAges)
pie(fAges , col = color)
mAges <- table(analysisData[analysisData$gender == "M" , c("age")])
barplot(mAges)
pie(mAges , col = color)
gender<- table(analysisData$gender)
barplot(gender)
pie(gender,col = c("pink","blue"))
recGender <- table(analysisData[analysisData$recovered == 1 , c("gender")])
barplot(recGender,col = c("pink","blue"))
pie(recGender,col = c("pink","blue"))
dGender <- table(analysisData[analysisData$death == 1 , c("gender")])
barplot(dGender,col = c("pink","blue"))
pie(dGender,col = c("pink","blue"))
View(analysisData)
levels(analysisData$wuhan)
wuhan
table(analysisData$wuhan)
table(analysisData$date_onset_symptoms)
View(analysisData)
analysisData$date_onset_symptoms
onsetDates <- as.Date(as.character(analysisData$date_onset_symptoms), format = "%d%m%Y")
onsetDates
onsetDates <- as.character(analysisData$date_onset_symptoms)
onsetDates
analysisData$date_onset_symptoms <- as.character(analysisData$date_onset_symptoms)
analysisData <- read.csv("preprocessedfinalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$age[analysisData$age == "N/A" | analysisData$age == ""] <- NA
analysisData$age <- as.numeric(analysisData$age)
myAge <- analysisData$age[ !(is.na(analysisData$age))]
rm(list = ls())
analysisData <- read.csv("preprocessedfinalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$date_onset_symptoms <- as.character(analysisData$date_onset_symptoms)
table(analysisData$date_onset_symptoms)
table(analysisData$date_onset_symptoms)
analysisData <- read.csv("preprocessedfinalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
table(analysisData$date_onset_symptoms)
dates <- analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms) | (analysisData$date_onset_symptoms == ""))]
table(dates)
dates <- as.Date(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms) | (analysisData$date_onset_symptoms == ""))])
dates <- as.Date(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms) | (analysisData$date_onset_symptoms == ""))],format = "%d%m%Y")
analysisData <- read.csv("preprocessedfinalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$date_onset_symptoms <- as.character(analysisData$date_onset_symptoms)
dates <- as.Date(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms) | (analysisData$date_onset_symptoms == ""))],format = "%d%m%Y")
analysisData$date_onset_symptoms <- as.character(analysisData$date_onset_symptoms)
dates <- as.Date(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms) | (analysisData$date_onset_symptoms == ""))],format = "%d%m%Y")
analysisData$date_onset_symptoms <- as.character(analysisData$date_onset_symptoms)
dates <- as.Date(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms) | (analysisData$date_onset_symptoms == ""))],format = "%d.%m.%Y")
dates
analysisData$date_onset_symptoms <- as.character(analysisData$date_onset_symptoms)
dates <- as.Date(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms)) & (analysisData$date_onset_symptoms != "")],format = "%d.%m.%Y")
dates
dates <- as.Date(analysisData$date_onset_symptoms[(analysisData$date_onset_symptoms != "NA") & (analysisData$date_onset_symptoms != "")],format = "%d.%m.%Y")
dates
dates <- (analysisData$date_onset_symptoms[(analysisData$date_onset_symptoms != "NA") & (analysisData$date_onset_symptoms != "")],format = "%d.%m.%Y")
dates <- analysisData$date_onset_symptoms[(analysisData$date_onset_symptoms != "NA") & (analysisData$date_onset_symptoms != "")]
dates
dates <- analysisData$date_onset_symptoms[(analysisData$date_onset_symptoms != NA) & (analysisData$date_onset_symptoms != "")]
dates
analysisData$date_onset_symptoms[ analysisData$date_onset_symptoms == ""] <- NA
analysisData$date_onset_symptoms <- as.character(analysisData$date_onset_symptoms)
table
table(analysisData$date_onset_symptoms)
dates <- analysisData$date_onset_symptoms[(analysisData$date_onset_symptoms != NA) )]
dates <- analysisData$date_onset_symptoms[(analysisData$date_onset_symptoms != NA) ]
dates <- analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms )) ]
dates
dates <- as.Date(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms )) ],format = "%d.%m.%Y")
dates
analysisData <- read.csv("preprocessedfinalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$date_onset_symptoms[ analysisData$date_onset_symptoms == ""] <- NA
analysisData$date_onset_symptoms <- as.character(analysisData$date_onset_symptoms)
dates <- as.Date(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms )) ],format = "%d.%m.%Y")
dates
analysisData$date_onset_symptoms <- as.Date(as.character(analysisData$date_onset_symptoms),format = "%d.%m.%Y")
analysisData$date_onset_symptoms
analysisData$date_onset_symptoms
analysisData <- read.csv("preprocessedfinalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$date_onset_symptoms[ analysisData$date_onset_symptoms == ""] <- NA
analysisData$date_onset_symptoms
analysisData$date_onset_symptoms <- as.character(analysisData$date_onset_symptoms)
dates <- as.Date(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms )) ],format = "%d.%m.%Y")
dates
analysisData <- read.csv("preprocessedfinalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$date_onset_symptoms[ analysisData$date_onset_symptoms == ""] <- NA
analysisData$date_onset_symptoms <- as.character(analysisData$date_onset_symptoms)
dates <- analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms )) ]
dates
max(dates)
analysisData$date_onset_symptoms[1:14127,] <- as.Date(as.character(analysisData$date_onset_symptoms[1:14127,]),format = "%d.%m.%Y")
analysisData$date_onset_symptoms[1:14127] <- as.Date(as.character(analysisData$date_onset_symptoms[1:14127]),format = "%d.%m.%Y")
View(analysisData)
analysisData <- read.csv("preprocessedfinalData.csv",header = TRUE)
analysisData$date_onset_symptoms[ analysisData$date_onset_symptoms == ""] <- NA
analysisData$date_onset_symptoms[1:14127] <- as.Date(as.character(analysisData$date_onset_symptoms[1:14127]),format = "%d.%m.%Y")
opendates<- as.character(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms))])
opendates <- as.Date(opendates,format = "%d.%m.%Y")
a <- as.Date(analysisData$date_onset_symptoms,format="%d.%m.%Y") # Produces NA when format is not "%m/%d/%Y"
b <- as.Date(analysisData$date_onset_symptoms,format="%m.%d.%Y") # Produces NA when format is not "%d.%m.%Y"
a[is.na(a)] <- b[!is.na(b)] # Combine both while keeping their ranks
analysisData$date_onset_symptoms <- a # Put it back in your dataframe
analysisData$date_onset_symptoms
is.na(analysisData$date_onset_symptoms)
analysisData <- read.csv("preprocessedfinalData.csv",header = TRUE)
analysisData <- analysisData[!(duplicated(analysisData)),]
analysisData$date_onset_symptoms[ analysisData$date_onset_symptoms == ""] <- NA
dates<- as.character(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms))])
a <- as.Date(dates,format="%d.%m.%Y") # Produces NA when format is not "%m/%d/%Y"
b <- as.Date(dates,format="%m.%d.%Y") # Produces NA when format is not "%d.%m.%Y"
a[is.na(a)] <- b[!is.na(b)] # Combine both while keeping their ranks
dates <- a # Put it back in your dataframe
dates
max(dates)
a
b
dates <- as.Date(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms )) ],format = "%d.%m.%Y")
a <- as.Date(dates,format="%d.%m.%Y") # Produces NA when format is not "%m/%d/%Y"
a
month(a)
weekdays(as.Date("10.09.1996"))
weekdays(as.Date("10.09.1996"),"%d.%m.%Y")
weekdays(as.Date("10.09.1996","%d.%m.%Y"))
library("lubridate")
library("lubridate")
month(dates)
analysisData$date_onset_symptoms[ analysisData$date_onset_symptoms == ""] <- NA
dates<- as.character(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms))])
i = 1
while (i <= length(dates) ){
if(month(dates[i]) > 2 & year(dates[i]) == 2020){
dates[i] <- as.Date(dates[i],format="%m.%d.%Y")
}
else{
dates[i] <- as.Date(dates[i],format="%d.%m.%Y")
}
i <- i+1
}
if(month(dates[i]) > 2 & year(dates[i]) == 2020){
dates[i] <- as.Date(dates[i],format="%m.%d.%Y")
}
mary <- "Mary"
mary[1:2]
mary <- as.character("Mary")
mary[1:2]
a <- as.Date(dates,format="%d.%m.%Y") # Produces NA when format is not "%m/%d/%Y"
b <- as.Date(dates,format="%m.%d.%Y") # Produces NA when format is not "%d.%m.%Y"
a[is.na(a)] <- b[!is.na(b)] # Combine both while keeping their ranks
dates <- a # Put it back in your dataframe
max(dates)
i = 1
while (i <= length(dates) ){
if(month(dates[i])   & year(dates[i]) == 2020){
dates[i] <- as.Date(dates[i],format="%m.%d.%Y")
}
else{
dates[i] <- as.Date(dates[i],format="%d.%m.%Y")
}
i <- i+1
}
dates
max(dates)
dates[998]
dates[999]
dates[1000]
i = 1
while (i <= length(dates) ){
if(month(dates[i])   & year(dates[i]) == 2020){
dates[i] <- as.Date(dates[i],format="%d.%m.%Y")
}
else{
dates[i] <- as.Date(dates[i],format="%m.%d.%Y")
}
i <- i+1
}
max(dates)
i = 1
while (i <= length(dates) ){
if(month(dates[i]) >2   & year(dates[i]) == 2020){
dates[i] <- as.Date(dates[i],format="%d.%m.%Y")
}
else{
dates[i] <- as.Date(dates[i],format="%m.%d.%Y")
}
i <- i+1
}
max(dates)
i = 1
while (i <= length(dates) ){
if(month(dates[i]) >2   & year(dates[i]) == 2020){
print("yes")
dates[i] <- as.Date(dates[i],format="%d.%m.%Y")
}
else{
dates[i] <- as.Date(dates[i],format="%m.%d.%Y")
}
i <- i+1
}
i = 1
while (i <= length(dates) ){
if(month(dates[i]) >2   & year(dates[i]) == 2020){
print(i)
dates[i] <- as.Date(dates[i],format="%d.%m.%Y")
}
else{
dates[i] <- as.Date(dates[i],format="%m.%d.%Y")
}
i <- i+1
}
i = 1
while (i <= length(dates) ){
if(month(dates[i]) >2   & year(dates[i]) == 2020){
print(i)
dates[i] <- as.Date(dates[i],format="%d.%m.%Y")
}
else{
print("yes")
dates[i] <- as.Date(dates[i],format="%m.%d.%Y")
}
i <- i+1
}
dates<- as.character(analysisData$date_onset_symptoms[!(is.na(analysisData$date_onset_symptoms))])
a <- as.Date(dates,format="%d.%m.%Y") # Produces NA when format is not "%m/%d/%Y"
b <- as.Date(dates,format="%m.%d.%Y") # Produces NA when format is not "%d.%m.%Y"
a[is.na(a)] <- b[!is.na(b)] # Combine both while keeping their ranks
dates <- a # Put it back in your dataframe
i = 1
while (i <= length(dates) ){
if(month(dates[i]) >2   & year(dates[i]) == 2020){
print(i)
dates[i] <- as.Date(dates[i],format="%d.%m.%Y")
}
else{
print("yes")
dates[i] <- as.Date(dates[i],format="%m.%d.%Y")
}
i <- i+1
}
max(dates)
